{"version":3,"sources":["routes/Detail.js","component/Movie.js","routes/Home.js","App.js","index.js"],"names":["Detail","useState","loading","setLoading","id","useParams","movie","setMovie","getMovie","useCallback","a","fetch","json","data","console","log","useEffect","className","to","src","large_cover_image","alt","genres","map","g","title","description_intro","Movie","mainImg","summary","length","slice","Home","movies","setMovies","getMovies","title_long","medium_cover_image","App","path","process","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b013fa21.chunk.js","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nconst Detail = () => {\n  \n  const [loading, setLoading] = useState(true);\n  const {id} = useParams();\n  const [movie, setMovie] =useState([]);\n  const getMovie = useCallback(async() => {\n    const json = await (\n    await fetch(`https://yts.mx/api/v2/movie_details.json?movie_id=${id}`)\n    ).json()\n    setMovie(json.data.movie)\n    setLoading(false)\n    console.log(json);\n    }, [id]);\n    useEffect(() => {\n    getMovie()\n    }, [getMovie]);\n  return(\n    <div className=\"max-w-screen-lg  mx-auto\">     \n      {loading ? <h2  className=\"text-center text-4xl my-8 font-bold\">기다려봐 팍 씨\"</h2> : \n      <div>\n        <h1 className=\"text-center text-2xl my-4 font-bold\">영화 상세페이지</h1>\n        <p className=\"text-right my-2 text-gray-400 tracking-tight text-sm hover:text-green-400\"><Link to ={`/react-moive2021`}>뒤로가기</Link></p>\n        <ul className=\"grid grid-cols-2\">\n          <li>\n            <img src={movie.large_cover_image} alt=\"큰 포스터\"/>\n          </li>\n          <li className=\"my-auto\">\n          <span className=\"text-sm\">장르 :</span>\n          { movie.genres.map((g) => (\n            <span className=\"mt-2 text-gray-300 ml-2 text-sm\" key={g}>{g}</span>\n          ))}\n          <h2 className=\"text-2xl mb-8 mt-4\">{movie.title}</h2>\n          <span className=\"\">{movie.description_intro}</span>\n          </li>\n        </ul>\n      </div>\n      } \n      \n    </div>\n  )\n}\n\nexport default Detail;\n\n//무조건 map을 사용하는건 아닌다.","import {Link} from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nconst Movie = ({id, mainImg, title, genres, summary}) => {\n  return (\n    <li className=\"bg-white rounded-md shadow-2xl shadow-blue-600 hover:bg-green-100\" key={id} >\n      <Link to ={`/movie/${id}`}>\n      <img className=\"mx-auto rounded-lg mt-4\" src={mainImg} alt={title}\n      />\n      <div >\n        <h3 className=\"text-2xl mt-4 hover:bg-sky-700\">{title.length > 20 ? `${title.slice(0,20)}...`: title}</h3>\n        <ul className=\"flex justify-around\">\n          { genres.map((g) => (\n            <li className=\"mt-2 text-blue-300\" key={g}>{g}</li>\n          ))}\n        </ul>\n        <p className=\"mt-4 pb-4 px-2\">{summary.length > 50 ? `${summary.slice(0,50)}...`: summary}</p>\n      </div>\n      </Link>\n    </li>       \n  )\n}\n\nMovie.propTypes = {\n  id:PropTypes.number.isRequired, \n  mainImg:PropTypes.string.isRequired, \n  title:PropTypes.string.isRequired, \n  genres:PropTypes.arrayOf(PropTypes.string).isRequired, \n  summary:PropTypes.string.isRequired,\n};\n\nexport default Movie;","import { useEffect, useState } from \"react\";\nimport Movie from \"../component/Movie\";\n\nconst Home = () => {\n  const [loading, setLoading] = useState(true);\n  const [movies, setMovies] = useState([]);\n  const getMovies = async () => {\n    const json = await (\n      await fetch(\n        `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n      )\n    ).json();\n    setMovies(json.data.movies);\n    setLoading(false);\n  };\n  useEffect(() => {\n    getMovies();\n  },[]);\n\n  return(\n    <div className=\"max-w-screen-lg  mx-auto\">\n      {loading ? <h2 className=\"text-center text-4xl my-8 font-bold\">\"기다려봐 팍 씨\"</h2> : \n      <div className=\"\">\n        <h1 className=\"text-center text-4xl py-8 font-bold\">추천 영화</h1>\n        <p className=\"text-right my-2 text-gray-400 tracking-tight text-sm\">* 클릭시 상세 보기</p>\n        <ul className=\"grid grid-cols-3 text-center gap-12\">\n        {movies.map((movie) => (\n          <Movie\n          key={movie.id} \n          title={movie.title_long}\n          mainImg={movie.medium_cover_image}\n          id= {movie.id}\n          genres= {movie.genres}\n          summary={movie.summary}\n          /> \n        ))}\n        </ul>\n      </div>\n      }\n    </div>\n  )\n}\n\nexport default Home;","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Detail from \"./routes/Detail\";\nimport Home from \"./routes/Home\";\n\nconst App = () => {\n  return(\n    <>\n      <Router>\n        <Routes>\n          <Route  path={`${process.env.PUBLIC_URL}/`} element={<Home />}>\n          </Route>\n          <Route path=\"/movie/:id\" element={<Detail />}>\n          </Route>\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nexport default App;\n\n// const getMovies = async () => {\n//   const json = await (\n//     await fetch(\n//       `https://yts.mx/api/v2/list_movies.json?minimum_rating=8.8&sort_by=year`\n//     )\n//   ).json();\n//   setMovies(json.data.movies);\n//   setLoading(false);\n// };\n//setLoading(false);를 하는 이유는 로딩이 끝낫으니 데이터를 보여주기위해 true를 false로 바꿔주기 위함이다.\n// {movie.genres.map((genres,index) => (\n//   <li key={index} style={{fontWeight:\"bold\", color:\"#ccc\"}}>{genres}</li>\n// ))}\n// map를 사용후 코드와 함께 추가하기위해서는 꼭 key값을 넣어줘야 한다. 그리고 () => ()이다. 뒤에가 중가로가 아닌 소가로이다.","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}